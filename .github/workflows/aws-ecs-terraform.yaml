name: Deploy to AWS ECS

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'  
      - 'node-backend-app1/**'
      - 'react-frontend-app2-new/**'
      - 'spring-micro-app3/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push node-app1
      - name: Build and push node-app1
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: myecr-ameen1
          IMAGE_TAG: node-app1-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./node-backend-app1
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    
      # Build and push react-app2
      #- name: Build and push react-app2
      #  env:
      #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    ECR_REPOSITORY: myecr-ameen1
       #   IMAGE_TAG: react-app2-${{ github.sha }}
       # run: |
       #   docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./react-frontend-app2
       #   docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Build and push spring-micro
      #- name: Build and push spring-micro
      #  env:
      #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    ECR_REPOSITORY: myecr-ameen1
      #    IMAGE_TAG: spring-micro-${{ github.sha }}
      #  run: |
      #    docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./spring-micro-app3
      #    docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      # Initialize Terraform with S3 backend
      - name: Terraform Init
        run: |
          cd terraform
          terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
                        -backend-config="key=tfstate/main.tfstate" \
                        -backend-config="region=us-east-1"

      # Update Terraform configuration with new image tags
      - name: Update Terraform image tags
        run: |
          cd terraform
          sed -i "s|593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1@sha256:4240419aa95be71ad66633e17296e6002f938de29ee973031c8162c62c85e857|593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1:node-app1-${{ github.sha }}|g" main.tf
      #    sed -i "s|593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1@sha256:591b43fa2e3a3069eb67cbcc38c90e2b383d1f740dd068a6593b51566f3b8ee0|593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1:react-app2-${{ github.sha }}|g" main.tf
      #    sed -i "s|593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1:latest|593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1:spring-micro-${{ github.sha }}|g" main.tf

      # Apply Terraform
      - name: Terraform Apply
        run: |
          cd terraform
          terraform destroy -auto-approve